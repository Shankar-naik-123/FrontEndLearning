{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../post-list/post-list.component\";\nexport class PostComponent {\n  constructor() {\n    this.postComponentTitle = '';\n    this.messageFromChild = new EventEmitter();\n    this.dataFromChild = 'This is the Data from Child Post component via OutPut decorator';\n    this.postParentData = \"This is from Post Parent Component\";\n    this.title = \"The List of Posts\";\n    this.postChildDataToParentapp = 'This is from Child Post Component';\n    this.Adress = 'Berlin, Spain';\n    this.lastName = '';\n  }\n  SendMessage() {\n    console.log(this.dataFromChild);\n    this.messageFromChild.emit(this.dataFromChild);\n  }\n  OnKeyUpEvent() {\n    console.log(\"KeyPressed\");\n  }\n  OnKeyUpEventWithParam(username) {\n    console.log(username);\n  }\n  SendLastName() {\n    console.log(this.lastName);\n  }\n  sendAdress() {\n    console.log(this.Adress);\n  }\n}\nPostComponent.ɵfac = function PostComponent_Factory(t) {\n  return new (t || PostComponent)();\n};\nPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostComponent,\n  selectors: [[\"app-post\"]],\n  inputs: {\n    postComponentTitle: \"postComponentTitle\"\n  },\n  outputs: {\n    messageFromChild: \"messageFromChild\"\n  },\n  decls: 23,\n  vars: 4,\n  consts: [[3, \"fromParentPost\"], [3, \"click\"], [\"type\", \"text\", 3, \"keyup.enter\"], [\"username\", \"\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [\"type\", \"text\", 3, \"value\", \"keyup.enter\"]],\n  template: function PostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"app-post-list\", 0);\n      i0.ɵɵtext(3, \"\\nEvent Handling \");\n      i0.ɵɵelementStart(4, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function PostComponent_Template_button_click_4_listener() {\n        return ctx.SendMessage();\n      });\n      i0.ɵɵtext(5, \"Click\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\")(7, \"br\");\n      i0.ɵɵtext(8, \"\\nEvent Filtering \");\n      i0.ɵɵelementStart(9, \"input\", 2);\n      i0.ɵɵlistener(\"keyup.enter\", function PostComponent_Template_input_keyup_enter_9_listener() {\n        return ctx.OnKeyUpEvent();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\")(11, \"br\");\n      i0.ɵɵtext(12, \" Template variable \");\n      i0.ɵɵelementStart(13, \"input\", 2, 3);\n      i0.ɵɵlistener(\"keyup.enter\", function PostComponent_Template_input_keyup_enter_13_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(14);\n        return i0.ɵɵresetView(ctx.OnKeyUpEventWithParam(_r0.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\")(16, \"br\");\n      i0.ɵɵtext(17, \" Two Way binding \");\n      i0.ɵɵelementStart(18, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function PostComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.lastName = $event;\n      })(\"keyup.enter\", function PostComponent_Template_input_keyup_enter_18_listener() {\n        return ctx.SendLastName();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"br\")(20, \"br\");\n      i0.ɵɵtext(21, \" OneWayBinding Using propertyBinding \");\n      i0.ɵɵelementStart(22, \"input\", 5);\n      i0.ɵɵlistener(\"keyup.enter\", function PostComponent_Template_input_keyup_enter_22_listener() {\n        return ctx.sendAdress();\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.postComponentTitle);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"fromParentPost\", ctx.postParentData);\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngModel\", ctx.lastName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.Adress);\n    }\n  },\n  dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, i2.PostListComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAiCA,YAAY,QAAO,eAAe;;;;AAOnE,OAAM,MAAOC,aAAa;EASxBC;IALA,uBAAkB,GAAQ,EAAE;IAG5B,qBAAgB,GAAC,IAAIF,YAAY,EAAU;IAI5C,kBAAa,GAAQ,iEAAiE;IACrF,mBAAc,GAAQ,oCAAoC;IAC1D,UAAK,GAAQ,mBAAmB;IAChC,6BAAwB,GAAQ,mCAAmC;IACnE,WAAM,GAAQ,eAAe;IAC7B,aAAQ,GAAQ,EAAE;EAPJ;EASdG,WAAW;IACbC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,aAAa,CAAC;IAC/B,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAACF,aAAa,CAAC;EAC9C;EAEAG,YAAY;IAEVL,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EACzB;EAEAK,qBAAqB,CAACC,QAAe;IACpCP,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;EACpB;EAEAC,YAAY;IACZR,OAAO,CAACC,GAAG,CAAC,IAAI,CAACQ,QAAQ,CAAC;EAC9B;EACAC,UAAU;IAERV,OAAO,CAACC,GAAG,CAAC,IAAI,CAACU,MAAM,CAAC;EAC1B;;AAtCad,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAe;EAAAC;IAAAC;EAAA;EAAAC;IAAAZ;EAAA;EAAAa;EAAAC;EAAAC;EAAAC;IAAA;;MCP1BC,yBAAG;MAAAA,YAAsB;MAAAA,iBAAI;MAC7BA,mCAAkE;MAGlEA,iCAAe;MAAAA,iCAAgC;MAAxBA;QAAA,OAASC,iBAAa;MAAA,EAAC;MAACD,qBAAK;MAAAA,iBAAS;MAACA,qBAAI;MAGlEA,kCAAgB;MAAAA,gCAAkD;MAA/BA;QAAA,OAAeC,kBAAc;MAAA,EAAC;MAAjDD,iBAAkD;MAAAA,sBAAI;MAItEA,oCAAkB;MAAAA,oCAAmF;MAAhEA;QAAAA;QAAA;QAAA,OAAeA,mDAAqC;MAAA,EAAC;MAAxEA,iBAAmF;MAAAA,sBAAI;MAKxGA,kCAAkB;MAAAA,iCAAyE;MAAtDA;QAAA;MAAA,EAAsB;QAAA,OAAgBC,kBAAc;MAAA,EAA9B;MAAzCD,iBAAyE;MAAAA,sBAAI;MAMhGA,sDAAoC;MAAAA,iCAAiE;MAA7BA;QAAA,OAAeC,gBAAY;MAAA,EAAC;MAAhED,iBAAiE;;;MAtBlGA,eAAsB;MAAtBA,4CAAsB;MACVA,eAAiC;MAAjCA,mDAAiC;MAeVA,gBAAsB;MAAtBA,sCAAsB;MAMLA,eAAgB;MAAhBA,kCAAgB","names":["EventEmitter","PostComponent","constructor","SendMessage","console","log","dataFromChild","messageFromChild","emit","OnKeyUpEvent","OnKeyUpEventWithParam","username","SendLastName","lastName","sendAdress","Adress","selectors","inputs","postComponentTitle","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Learnings\\Angular\\octacademyAngularCourse\\src\\app\\post\\post.component.ts","C:\\Learnings\\Angular\\octacademyAngularCourse\\src\\app\\post\\post.component.html"],"sourcesContent":["import { Component ,Input,Output,EventEmitter} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-post',\r\n  templateUrl: './post.component.html',\r\n  styleUrls: ['./post.component.css']\r\n})\r\nexport class PostComponent {\r\n\r\n\r\n  @Input()\r\n  postComponentTitle:string='';\r\n\r\n  @Output()\r\n  messageFromChild=new EventEmitter<string>();\r\n\r\n  constructor(){}\r\n\r\n dataFromChild:string='This is the Data from Child Post component via OutPut decorator';\r\n  postParentData:string=\"This is from Post Parent Component\";\r\n  title:String=\"The List of Posts\"\r\n  postChildDataToParentapp:string='This is from Child Post Component'; \r\n  Adress:string='Berlin, Spain';\r\n  lastName:string='';\r\n\r\n  SendMessage() {\r\nconsole.log(this.dataFromChild);\r\nthis.messageFromChild.emit(this.dataFromChild);\r\n}\r\n\r\nOnKeyUpEvent() {\r\n  \r\n  console.log(\"KeyPressed\");\r\n  }\r\n\r\n  OnKeyUpEventWithParam(username:string) {\r\n   console.log(username);\r\n    }\r\n\r\n    SendLastName() {\r\n    console.log(this.lastName);   \r\n}\r\nsendAdress()\r\n{\r\n  console.log(this.Adress);\r\n}\r\n}\r\n","<p>{{postComponentTitle}}</p>\r\n<app-post-list [fromParentPost]='postParentData'> </app-post-list>\r\n\r\n<!--Event Handling-->\r\nEvent Handling <button (click)='SendMessage()'>Click</button> <br><br>\r\n\r\n<!--Event Filtering -->\r\nEvent Filtering <input type=\"text\" (keyup.enter)=\"OnKeyUpEvent()\"><br><br>\r\n\r\n<!--Template variable-->\r\n\r\nTemplate variable <input type=\"text\" (keyup.enter)=\"OnKeyUpEventWithParam(username.value)\" #username><br><br>\r\n\r\n<!--Two Way binding \r\n To Perform two way binding we use [(ngModule)] and this is nor from core .We have to import this from forms in app.module.cs -->\r\n\r\n Two Way binding   <input type=\"text\" [(ngModel)]=\"lastName\" (keyup.enter)=\"SendLastName()\"><br><br>\r\n\r\n <!--One way datra binding is UniDirectional meaning it can send data only from Component to View cannot transfer vice versa.\r\nin the below exaple the value of text field get sets in the beginning from ts file varibale and on enter it will show up on the console page..\r\nwhich is static . bcz whenever we make change to text field from UI it won't shouw up the console as this won't update the variable in ts file.-->\r\n\r\nOneWayBinding Using propertyBinding <input type=\"text\" [value]=\"Adress\" (keyup.enter)=\"sendAdress()\">"]},"metadata":{},"sourceType":"module","externalDependencies":[]}