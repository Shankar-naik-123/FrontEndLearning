{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class EdittextPipe {\n  //We change below method signature auto generated by cli to pass arguemet\n  //transform(value: unknown, ...args: unknown[]): unknown {\n  transform(value, length) {\n    return value.substring(0, length);\n  }\n}\nEdittextPipe.ɵfac = function EdittextPipe_Factory(t) {\n  return new (t || EdittextPipe)();\n};\nEdittextPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"edittext\",\n  type: EdittextPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,YAAY;EACzB;EACE;EACEC,SAAS,CAACC,KAAa,EAAEC,MAAc;IACvC,OAAOD,KAAK,CAACE,SAAS,CAAC,CAAC,EAACD,MAAM,CAAC;EAClC;;AALWH,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;;QAAZA,YAAY;EAAAK;AAAA","names":["EdittextPipe","transform","value","length","substring","pure"],"sourceRoot":"","sources":["C:\\Learnings\\Angular\\octacademyAngularCourse\\src\\app\\Pipes\\edittext.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'edittext'\r\n})\r\nexport class EdittextPipe implements PipeTransform {\r\n//We change below method signature auto generated by cli to pass arguemet\r\n  //transform(value: unknown, ...args: unknown[]): unknown {\r\n    transform(value: string, length: number): unknown {\r\n    return value.substring(0,length);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}