{"ast":null,"code":"import { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction EmployeeComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Full Name is Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeComponent_div_7_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Min charatcer is 5 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, EmployeeComponent_div_7_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(2, EmployeeComponent_div_7_div_2_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.FullName.errors == null ? null : ctx_r0.FullName.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.FullName.errors == null ? null : ctx_r0.FullName.errors[\"minlength\"]);\n  }\n}\nfunction EmployeeComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeComponent_div_12_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, EmployeeComponent_div_12_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(2, EmployeeComponent_div_12_div_2_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.Email.errors == null ? null : ctx_r1.Email.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.Email.errors == null ? null : ctx_r1.Email.errors[\"email\"]);\n  }\n}\nfunction EmployeeComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Address is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, EmployeeComponent_div_18_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.Address.errors == null ? null : ctx_r2.Address.errors[\"required\"]);\n  }\n}\nfunction EmployeeComponent_div_23_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Shipping Address is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, EmployeeComponent_div_23_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.ShippingAddress.errors == null ? null : ctx_r3.ShippingAddress.errors[\"required\"]);\n  }\n}\nfunction EmployeeComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"PhoneNo is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeComponent_div_28_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"PhoneNo is InValid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, EmployeeComponent_div_28_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵtemplate(2, EmployeeComponent_div_28_div_2_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.PhoneNo.errors == null ? null : ctx_r4.PhoneNo.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.PhoneNo.errors == null ? null : ctx_r4.PhoneNo.errors[\"pattern\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class EmployeeComponent {\n  constructor() {\n    this.phoneNoRegex = \"[789][0-9]{9}\";\n    this.form = new FormGroup({\n      fullName: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      contactDetails: new FormGroup({\n        address: new FormControl('', Validators.required),\n        shippingAddress: new FormControl('', Validators.required),\n        phoneNo: new FormControl('', [Validators.required, Validators.pattern(this.phoneNoRegex)])\n      }),\n      skills: new FormArray([])\n    });\n  }\n  get FullName() {\n    return this.form.get('fullName');\n  }\n  get Email() {\n    return this.form.get('email');\n  }\n  get Address() {\n    return this.form.get('contactDetails.address');\n  }\n  get ShippingAddress() {\n    return this.form.get('contactDetails.shippingAddress');\n  }\n  get PhoneNo() {\n    return this.form.get('contactDetails.phoneNo');\n  }\n  OnSubmit() {\n    console.log(this.form.value);\n  }\n  get Skills() {\n    return this.form.get('skills');\n  }\n  AddSkills(skill) {\n    this.Skills.push(new FormControl(skill));\n    skill.value = '';\n    //console.log(this.Skills.value);\n  }\n\n  RemoveSkill(index) {\n    this.Skills.removeAt(index);\n  }\n}\nEmployeeComponent.ɵfac = function EmployeeComponent_Factory(t) {\n  return new (t || EmployeeComponent)();\n};\nEmployeeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeComponent,\n  selectors: [[\"app-employee\"]],\n  decls: 37,\n  vars: 22,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"form-area\"], [3, \"formGroup\", \"submit\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"First Name\", \"formControlName\", \"fullName\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"formGroupName\", \"contactDetails\"], [\"cols\", \"30\", \"rows\", \"10\", \"placeholder\", \"Address\", \"formControlName\", \"address\", 1, \"form-control\", 3, \"ngClass\"], [\"cols\", \"30\", \"rows\", \"10\", \"placeholder\", \"Shipping Address\", \"formControlName\", \"shippingAddress\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"placeholder\", \"PhoneNo\", \"formControlName\", \"phoneNo\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"\"], [\"type\", \"text\", 1, \"form-control\", 3, \"keyup.enter\"], [\"skill\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n  template: function EmployeeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r14 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"submit\", function EmployeeComponent_Template_form_submit_2_listener() {\n        return ctx.OnSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\");\n      i0.ɵɵtext(5, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵtemplate(7, EmployeeComponent_div_7_Template, 3, 2, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\");\n      i0.ɵɵtext(10, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 6);\n      i0.ɵɵtemplate(12, EmployeeComponent_div_12_Template, 3, 2, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 7)(14, \"div\", 3)(15, \"label\");\n      i0.ɵɵtext(16, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"textarea\", 8);\n      i0.ɵɵtemplate(18, EmployeeComponent_div_18_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\");\n      i0.ɵɵtext(21, \"Shipping Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"textarea\", 9);\n      i0.ɵɵtemplate(23, EmployeeComponent_div_23_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\");\n      i0.ɵɵtext(26, \"PhoneNo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 10);\n      i0.ɵɵtemplate(28, EmployeeComponent_div_28_Template, 3, 2, \"div\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 3)(30, \"label\", 11);\n      i0.ɵɵtext(31, \"Skills\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"input\", 12, 13);\n      i0.ɵɵlistener(\"keyup.enter\", function EmployeeComponent_Template_input_keyup_enter_32_listener() {\n        i0.ɵɵrestoreView(_r14);\n        const _r5 = i0.ɵɵreference(33);\n        return i0.ɵɵresetView(ctx.AddSkills(_r5));\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(34, \"ul\");\n      i0.ɵɵelementStart(35, \"button\", 14);\n      i0.ɵɵtext(36, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx.FullName.touched && ctx.FullName.invalid));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.FullName.touched && ctx.FullName.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx.Email.touched && ctx.Email.invalid));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.Email.touched && ctx.Email.invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx.Address.touched && ctx.Address.invalid));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.Address.touched && ctx.Address.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ctx.ShippingAddress.touched && ctx.ShippingAddress.invalid));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.ShippingAddress.touched && ctx.ShippingAddress.invalid);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ctx.PhoneNo.touched && ctx.PhoneNo.invalid));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.PhoneNo.touched && ctx.PhoneNo.invalid);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i2.FormGroupName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","FormArray","i0","EmployeeComponent","constructor","form","fullName","required","minLength","email","contactDetails","address","shippingAddress","phoneNo","pattern","phoneNoRegex","skills","FullName","get","Email","Address","ShippingAddress","PhoneNo","OnSubmit","console","log","value","Skills","AddSkills","skill","push","RemoveSkill","index","removeAt","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Learnings\\Angular\\octacademyAngularCourse\\src\\app\\employee\\employee.component.ts","C:\\Learnings\\Angular\\octacademyAngularCourse\\src\\app\\employee\\employee.component.html"],"sourcesContent":["//FOR TEMPLATE DRIVEN FORM -------\r\n\r\n/*import { Component } from '@angular/core';\r\nimport { FormControl, NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.css']\r\n})\r\nexport class EmployeeComponent {\r\n  OnSubmit(data:NgForm)\r\n  {\r\n    console.log(data.value);\r\n  }\r\n  getValue(f:any)\r\n  {\r\n    //console.log(f);\r\n  }\r\n\r\n}*/\r\n\r\n//FOR REACTIVE FORM \r\nimport { Component } from '@angular/core';\r\nimport { FormGroup,FormControl, Validators, FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.css']\r\n})\r\nexport class EmployeeComponent {\r\n  form:any;\r\n  phoneNoRegex:string=\"[789][0-9]{9}\"\r\n  constructor()\r\n  {\r\n   this.form=new FormGroup({\r\n    fullName:new FormControl('',[Validators.required,Validators.minLength(5)]),\r\n    email:new FormControl('',[Validators.required,Validators.email]),\r\n    contactDetails:new FormGroup({\r\n      address:new FormControl('',Validators.required),\r\n      shippingAddress:new FormControl('',Validators.required),\r\n      phoneNo:new FormControl('',[Validators.required,Validators.pattern(this.phoneNoRegex)])\r\n    }),\r\n    skills:new FormArray([])\r\n   });\r\n  }\r\n\r\n  get FullName(){\r\n    return this.form.get('fullName')\r\n  }\r\n  get Email(){ \r\n    return this.form.get('email')\r\n  }\r\n\r\n  get Address()\r\n  {\r\n    return this.form.get('contactDetails.address');\r\n  }\r\n  get ShippingAddress()\r\n  {\r\n    return this.form.get('contactDetails.shippingAddress');\r\n  }\r\n  get PhoneNo()\r\n  {\r\n    return this.form.get('contactDetails.phoneNo');\r\n  }\r\n\r\n\r\n  OnSubmit()\r\n  {\r\n    console.log(this.form.value);\r\n  }\r\n\r\n\r\n\r\n  get Skills()\r\n  {\r\n    return this.form.get('skills') as FormArray;\r\n  }\r\n\r\n\r\n  AddSkills(skill:HTMLInputElement)\r\n  {\r\n    this.Skills.push(new FormControl(skill));\r\n    skill.value=''\r\n    //console.log(this.Skills.value);\r\n  }\r\n\r\n  RemoveSkill(index:number)\r\n  {\r\n   this.Skills.removeAt(index);\r\n  }\r\n\r\n\r\n}","<!--Template driven form -->\r\n<!-- <div class=\"container mt-5\">\r\n    <div class=\"form-area\">\r\n        <form #f='ngForm' (ngSubmit)=\"OnSubmit(f)\">\r\n            <div class=\"form-group\">\r\n                <label>First Name</label>\r\n                <input type=\"text\" placeholder=\"First Name\" class=\"form-control\" name=\"firstName\" ngModel\r\n                    #fullName='ngModel' (change)=\"getValue(fullName)\" required\r\n                    [ngClass]=\"{'is-invalid':fullName.touched && fullName.invalid}\" minlength=\"5\" maxlength=\"10\">\r\n                <div *ngIf=\"fullName.errors?.['required']\">\r\n                    <div class=\"alert alert-danger\" *ngIf=\"fullName.touched && fullName.invalid\">Full Name is Required\r\n                    </div>\r\n\r\n                </div>\r\n                <div *ngIf=\"fullName.errors?.['minlength']\">\r\n                    <div class=\"alert alert-danger\" *ngIf=\"fullName.touched && fullName.invalid\">Full Name Must be atleast 5 characters\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Email</label>\r\n                <input type=\"email\" placeholder=\"Email\" class=\"form-control\" name=\"email\" ngModel #email='ngModel'\r\n                    (change)=\"getValue(email)\" pattern=\"[a-z0-9._%+\\-]+@[a-z0-9.\\-]+\\.[a-z]{2,}$\" required\r\n                    [ngClass]=\"{'is-invalid':email.touched && email.invalid}\">\r\n                    <div *ngIf=\"email.errors?.['required']\">\r\n                        <div class=\"alert alert-danger\" *ngIf=\"email.touched && email.invalid\">Email is Required\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div *ngIf=\"email.errors?.['pattern']\">\r\n                        <div class=\"alert alert-danger\" *ngIf=\"email.touched && email.invalid\">Invalid Email ...\r\n                        </div>\r\n    \r\n                    </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Address</label>\r\n                <textarea cols=\"30\" rows=\"10\" placeholder=\"Address\" class=\"form-control\" name=\"Address\" ngModel\r\n                    #address='ngModel' (change)=\"getValue(address)\" required\r\n                    [ngClass]=\"{'is-invalid':address.touched && address.invalid}\"></textarea>\r\n                    <div *ngIf=\"address.errors?.['required']\">\r\n                        <div class=\"alert alert-danger\" *ngIf=\"address.touched && address.invalid\">Address Required\r\n                        </div>\r\n    \r\n                    </div>\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"f.invalid\">Submit</button>\r\n        </form>\r\n    </div>\r\n</div> -->\r\n\r\n<!-- We have 2 classes 1. FormGroup 2. FormControl in angular . Not form-group or form-control written above those  are bootstrap classes.\r\nFormGroup class is corresponding to entire forrm and FormControl Class is applied to each element in side the form\r\n1 angular soln contains multiple FormGroup classes and one ForGroup class contains multiple FormControl Classes\r\n\r\nTo convert html form to angular form we need to have instance of formgroup and FormControl class . so we have to create instance of that class. \r\nwe can create ionstance of formGroup and FormControlClass by 2 ways.\r\n1.Creating template driven form- we use Angular directive\r\n2.Creating Reactive form.- We use hard coded object \r\n\r\nAbove we have implemented template driven form where we use angular directive ngForm and ngModel.\r\nngForm is for whole form and ngModel is for single element.  \r\nNote: to apply ngModele to single element we have to provide name property value for that element..\r\n-->\r\n\r\n<!--Reactive Form -->\r\n<!-- here we will create instannces of formGroup and FormControl class in .ts file  and Import\r\nReactiveFormsModule in App.Module.ts file-->\r\n<div class=\"container mt-5\">\r\n    <div class=\"form-area\">\r\n        <form [formGroup]='form' (submit)=\"OnSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label>First Name</label>\r\n                <input type=\"text\" placeholder=\"First Name\" class=\"form-control\" \r\n                formControlName='fullName' [ngClass]=\"{'is-invalid':FullName.touched && FullName.invalid}\">\r\n                <div class=\"alert alert-danger\" *ngIf=\"FullName.touched && FullName.invalid\">\r\n                    <div *ngIf=\"FullName.errors?.['required']\">Full Name is Required</div>\r\n                    <div *ngIf=\"FullName.errors?.['minlength']\">Min charatcer is 5 </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Email</label>\r\n                <input type=\"email\" placeholder=\"Email\" class=\"form-control\" \r\n                formControlName='email' [ngClass]=\"{'is-invalid':Email.touched && Email.invalid}\" >\r\n                <div class=\"alert alert-danger\" *ngIf=\"Email.touched && Email.invalid\">\r\n                    <div *ngIf=\"Email.errors?.['required']\">Email is Required </div>\r\n                    <div *ngIf=\"Email.errors?.['email']\">Invalid email </div>\r\n                </div>\r\n            </div>\r\n            <div formGroupName=\"contactDetails\">\r\n                <div class=\"form-group\">\r\n                    <label>Address</label>\r\n                    <textarea cols=\"30\" rows=\"10\" placeholder=\"Address\" class=\"form-control\"\r\n                    formControlName=\"address\"  [ngClass]=\"{'is-invalid':Address.touched && Address.invalid}\"></textarea>\r\n                    <div class=\"alert alert-danger\" *ngIf=\"Address.touched && Address.invalid\">\r\n                        <div *ngIf=\"Address.errors?.['required']\">Address is Required </div>                   \r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Shipping Address</label>\r\n                    <textarea cols=\"30\" rows=\"10\" placeholder=\"Shipping Address\" class=\"form-control\"\r\n                    formControlName=\"shippingAddress\" [ngClass]=\"{'is-invalid':ShippingAddress.touched && ShippingAddress.invalid}\"></textarea>\r\n                    <div class=\"alert alert-danger\" *ngIf=\"ShippingAddress.touched && ShippingAddress.invalid\">\r\n                        <div *ngIf=\"ShippingAddress.errors?.['required']\">Shipping Address is Required </div>                   \r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>PhoneNo</label>\r\n                    <input type=\"text\" placeholder=\"PhoneNo\" class=\"form-control\"\r\n                    formControlName=\"phoneNo\" [ngClass]=\"{'is-invalid':PhoneNo.touched && PhoneNo.invalid}\">\r\n                    <div class=\"alert alert-danger\" *ngIf=\"PhoneNo.touched && PhoneNo.invalid\">\r\n                        <div *ngIf=\"PhoneNo.errors?.['required']\">PhoneNo is Required </div>  \r\n                        <div *ngIf=\"PhoneNo.errors?.['pattern']\">PhoneNo is InValid </div>                   \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"form-group\">\r\n               <label for=\"\">Skills</label>\r\n               <input type=\"text\" class=\"form-control\" #skill (keyup.enter)=\"AddSkills(skill)\">\r\n            </div>\r\n            <ul></ul>\r\n            \r\n            <button type=\"submit\" [disabled]='form.invalid' class=\"btn btn-primary\" >Submit</button>\r\n        </form>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}